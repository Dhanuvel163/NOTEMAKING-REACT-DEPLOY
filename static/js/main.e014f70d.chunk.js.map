{"version":3,"sources":["Components/modalchildComponent.js","Components/mainComponent.js","App.js","serviceWorker.js","index.js"],"names":["useStyles","makeStyles","theme","noteinput","marginLeft","width","marginTop","backgroundColor","borderRadius","Modalchild","prop","addnote","classes","React","useState","note","values","setValues","FormControl","variant","className","InputLabel","htmlFor","FilledInput","id","type","value","onChange","event","target","endAdornment","InputAdornment","position","IconButton","edge","onClick","listroot","maxWidth","boxShadow","color","maxHeight","overflow","root","padding","display","alignItems","input","spacing","flex","iconButton","divider","height","margin","dividerlist","paper","background","border","Main","handleClose","setopen","handleClose1","setopen1","localStorage","getItem","notesarr","setnotesarr","open","open1","textareadata","settextareadata","search","setsearch","current","setcurrent","notesdata","split","filter","data","RegExp","test","map","ListItem","key","document","getElementById","setTimeout","ListItemAvatar","Avatar","style","ListItemText","primary","Divider","orientation","Fab","marginBottom","Paper","elevation","paddingTop","component","InputBase","placeholder","val","inputProps","aria-label","Modal","onClose","aria-labelledby","aria-describedby","concat","setItem","List","TextField","minHeight","datachangeHandler","multiline","rows","defaultValue","marginRight","textAlign","App","justifyContent","AppBar","Toolbar","Typography","bottom","top","Boolean","window","location","hostname","match","ReactDOM","render","StrictMode","navigator","serviceWorker","ready","then","registration","unregister","catch","error","console","message"],"mappings":"meAWMA,EAAYC,aAAW,SAACC,GAAD,MAAY,CACrCC,UAAU,CAACC,WAAW,MAAMC,MAAM,MAAMC,UAAU,MAC9CC,gBAAgB,QAAQC,aAAa,OAI9B,SAASC,EAAT,GAA+B,IAKlBC,EALQC,EAAS,EAATA,QAC1BC,EAAUZ,IADyB,EAEXa,IAAMC,SAAS,CACzCC,KAAM,KAH+B,mBAEhCC,EAFgC,KAExBC,EAFwB,KAQzC,OACA,oCACI,kBAACC,EAAA,EAAD,CAAaC,QAAQ,SAASC,UAAWR,EAAQT,WAC7C,kBAACkB,EAAA,EAAD,CAAYC,QAAQ,QAApB,kBACA,kBAACC,EAAA,EAAD,CACIC,GAAG,OACHC,KAAK,OACLC,MAAOV,EAAOD,KACdY,UAXYjB,EAWW,OAXF,SAACkB,GAC9BX,EAAU,2BAAKD,GAAN,kBAAeN,EAAOkB,EAAMC,OAAOH,WAWpCI,aACA,kBAACC,EAAA,EAAD,CAAgBC,SAAS,OACrB,kBAACC,EAAA,EAAD,CACAC,KAAK,MACLC,QAAS,WAAKxB,EAAQK,EAAOD,QAEzB,kBAAC,IAAD,YCpBxB,IAAMf,EAAYC,aAAW,SAACC,GAAD,MAAY,CACrCkC,SAAU,CAAC9B,UAAU,GAAGD,MAAM,OAAOgC,SAAU,IAC/CC,UAAU,+GACV/B,gBAAgB,OAAOgC,MAAM,QAAQ/B,aAAa,EAAEgC,UAAU,QAAQC,SAAS,QAE/EC,KAAM,CAACC,QAAS,UAAUC,QAAS,OAAOC,WAAY,SAASR,SAAU,KAEzES,MAAO,CAAC1C,WAAYF,EAAM6C,QAAQ,GAAGC,KAAM,GAE3CC,WAAY,CAACN,QAAS,IAEtBO,QAAS,CAACC,OAAQ,GAAGC,OAAQ,GAE7BC,YAAa,CAACF,OAAQ,EAAEC,OAAQ,GAEhCE,MAAO,CAACtB,SAAU,WAAWK,SAAU,IAAIc,OAAO,GAAGI,WAAY,gEAAgE/C,aAAa,EAC1IgD,OAAQ,iBAAiBJ,OAAO,QAEpCjD,UAAU,CAACC,WAAW,MAAMC,MAAM,MAAMC,UAAU,OAC9CC,gBAAgB,QAAQC,aAAa,OA6L9BiD,MAzLf,WACI,IAAM7C,EAAUZ,IACV0D,EAAY,WAAKC,GAAQ,IACzBC,EAAa,WAAKC,GAAS,IAHrB,EAoBiB/C,mBAASgD,aAAaC,QAAQ,aApB/C,mBAoBLC,EApBK,KAoBIC,EApBJ,OAqBSnD,oBAAS,GArBlB,mBAqBLoD,EArBK,KAqBAP,EArBA,OAsBW7C,oBAAS,GAtBpB,mBAsBLqD,EAtBK,KAsBCN,EAtBD,OAuByB/C,mBAAS,IAvBlC,mBAuBLsD,EAvBK,KAuBQC,EAvBR,OAwBavD,mBAAS,KAxBtB,mBAwBLwD,EAxBK,KAwBEC,EAxBF,OAyBezD,mBAAS,IAzBxB,mBAyBL0D,EAzBK,KAyBGC,EAzBH,KA0BZ,GAAGX,aAAaC,QAAQ,aAAuB,KAARO,EACnC,IAAII,EAAUV,EAASW,MAAM,KAAKC,QAAO,SAACC,GAAD,OAAQ,IAAIC,OAAOR,GAAQS,KAAKF,MAAOG,KAAI,SAACH,GACjF,OACI,oCACA,kBAACI,EAAA,EAAD,CAAUC,IAAKL,EACX1C,QAAS,WACTgD,SAASC,eAAe,aAAa1D,MAAMoC,aAAaC,QAAQc,GAChEQ,YAAW,WACPhB,EAAgBP,aAAaC,QAAQc,IAAO,MAC9C,KACFJ,EAAWI,KAEX,kBAACS,EAAA,EAAD,KACA,kBAACC,EAAA,EAAD,CAAQC,MAAO,CAACjD,MAAM,QAAQhC,gBAAgB,UAC1C,kBAAC,IAAD,QAGJ,kBAACkF,EAAA,EAAD,CAAcC,QAASb,KAE3B,kBAACc,EAAA,EAAD,CAASvE,UAAWR,EAAQyC,YAAauC,YAAY,wBAK5D,GAAG9B,aAAaC,QAAQ,aAAuB,KAARO,EACpCI,EAAUV,EAASW,MAAM,KAAKK,KAAI,SAACH,GACnC,OACI,oCACA,kBAACI,EAAA,EAAD,CAAUC,IAAKL,EAAM1C,QAAS,WAC1BgD,SAASC,eAAe,aAAa1D,MAAMoC,aAAaC,QAAQc,GAChEQ,YAAW,WACPhB,EAAgBP,aAAaC,QAAQc,IAAO,MAC9C,KACFJ,EAAWI,KAEX,kBAACS,EAAA,EAAD,KACA,kBAACC,EAAA,EAAD,CAAQC,MAAO,CAACjD,MAAM,QAAQhC,gBAAgB,UAC1C,kBAAC,IAAD,QAGJ,kBAACkF,EAAA,EAAD,CAAcC,QAASb,KAE3B,kBAACc,EAAA,EAAD,CAASvE,UAAWR,EAAQyC,YAAauC,YAAY,mBAKjE,OAAG5B,EAEK,oCACA,yBAAK5C,UAAU,gCAAgCoE,MAAO,CAAClF,UAAU,KACjE,kBAACuF,EAAA,EAAD,CAAKtD,MAAM,UAAUpB,QAAQ,YACzB,qDAGJ,kBAAC,IAAD,CAAUqE,MAAO,CAACpF,WAAW,OAG7B,yBAAKgB,UAAU,YAAYoE,MAAO,CAAClF,UAAU,GAAGwF,aAAa,KAC7D,kBAACC,EAAA,EAAD,CAAOC,UAAW,EAAGR,MAAO,CAAC7C,QAAQ,GAAGsD,WAAW,EAAE1C,WAAW,kEAC5D,yBAAKnC,UAAU,OACX,yBAAKA,UAAU,qCACX,kBAAC2E,EAAA,EAAD,CAAOG,UAAU,OAAOF,UAAW,EAAG5E,UAAWR,EAAQ8B,MACrD,kBAACyD,EAAA,EAAD,CACI/E,UAAWR,EAAQkC,MACnBsD,YAAY,SACZzE,SAAU,SAAC0E,GACP9B,EAAU8B,EAAIxE,OAAOH,QAEzB4E,WAAY,CAAE,aAAc,YAEhC,kBAACrE,EAAA,EAAD,CAAYR,KAAK,SAASL,UAAWR,EAAQqC,WAAYsD,aAAW,UAChE,kBAAC,IAAD,OAEJ,kBAACZ,EAAA,EAAD,CAASvE,UAAWR,EAAQsC,QAAS0C,YAAY,aACjD,kBAAC3D,EAAA,EAAD,CAAYM,MAAM,UAAUJ,QAAS,WAAKwB,GAAQ,IAAQvC,UAAWR,EAAQqC,WAAYsD,aAAW,cACpG,kBAAC,IAAD,OAEA,kBAACC,EAAA,EAAD,CACIpF,UAAWR,EAAQ0C,MACnBY,KAAMA,EACNuC,QAAS/C,EACTgD,kBAAgB,qBAChBC,mBAAiB,4BAErB,kBAAClG,EAAD,CAAYE,QA3GtB,SAAC0F,GACH,IAALA,IACCpC,EAAYD,EAAS4C,OAAO,IAAIP,IAChCvC,aAAa+C,QAAQ,WAAW7C,EAAS4C,OAAO,IAAIP,KAExD3C,IACAE,SAwGgB,kBAACkD,EAAA,EAAD,CAAM1F,UAAWR,EAAQwB,UACpBsC,IAGT,yBAAKtD,UAAU,YACX,kBAAC2F,EAAA,EAAD,CACAvB,MAAO,CAACwB,UAAU,IAAI3G,MAAM,QAC5BmB,GAAG,YACHG,SAAU,SAAC0E,IA1GP,SAACA,GACrBhC,EAAgBgC,GAChBvC,aAAa+C,QAAQrC,EAAQ6B,GAyGTY,CAAkBZ,EAAIxE,OAAOH,QAEjCwF,WAAS,EACTC,KAAM,GACNC,aAAchD,EACdjD,QAAQ,kBAUxB,6BACI,yBAAKC,UAAU,gCAAgCoE,MAAO,CAAClF,UAAU,KACjE,kBAACuF,EAAA,EAAD,CAAKtD,MAAM,UAAUpB,QAAQ,YACzB,qDAGJ,kBAAC,IAAD,CAAUqE,MAAO,CAACpF,WAAW,OAG7B,yBAAKoF,MAAO,CAAClF,UAAU,IAAKc,UAAU,aAClC,kBAAC2E,EAAA,EAAD,CAAOC,UAAW,EAAGR,MAAO,CAACpF,WAAW,GAAGiH,YAAY,GAAG1E,QAAQ,GAAGnC,aAAa,EAAE+C,WAAW,kEAC/F,wBAAIiC,MAAO,CAAC8B,UAAU,SAAShH,UAAU,GAAGiC,MAAM,UAC9C,iEAIJ,yBAAKnB,UAAU,gCAAgCoE,MAAO,CAAClF,UAAU,MAC7D,kBAACyF,EAAA,EAAD,CAAOC,UAAW,EAAGE,UAAU,OAAO9E,UAAWR,EAAQ8B,MACrD,kBAACyD,EAAA,EAAD,CACI/E,UAAWR,EAAQkC,MACnBsD,YAAY,SACZE,WAAY,CAAE,aAAc,YAEhC,kBAACrE,EAAA,EAAD,CAAYR,KAAK,SAASL,UAAWR,EAAQqC,WAAYsD,aAAW,UAChE,kBAAC,IAAD,OAEJ,kBAACZ,EAAA,EAAD,CAASvE,UAAWR,EAAQsC,QAAS0C,YAAY,aACjD,kBAAC3D,EAAA,EAAD,CAAYM,MAAM,UAAUJ,QAAS,WAAK0B,GAAS,IAAQzC,UAAWR,EAAQqC,WAAYsD,aAAW,cACjG,kBAAC,IAAD,OAEJ,kBAACC,EAAA,EAAD,CACIpF,UAAWR,EAAQ0C,MACnBY,KAAMC,EACNsC,QAAS7C,EACT8C,kBAAgB,qBAChBC,mBAAiB,4BAEjB,kBAAClG,EAAD,CAAYE,QAnKjB,SAAC0F,GAChBpC,EAAYoC,GACZvC,aAAa+C,QAAQ,WAAWR,a,4DCNzBkB,MAzCf,WACE,OACE,6BACE,yBAAK/B,MAAO,CAAC5C,QAAQ,OAAO4E,eAAe,WACrC,kBAACC,EAAA,EAAD,CAAQzF,SAAS,SACjB,kBAAC0F,EAAA,EAAD,KACE,kBAACzF,EAAA,EAAD,CAAYC,KAAK,QAAQK,MAAM,UAAUgE,aAAW,QAClD,kBAAC,IAAD,OAEF,kBAACoB,EAAA,EAAD,CAAYxG,QAAQ,MAClB,6CAOV,yBAAKqE,MAAO,CAAClF,UAAU,KACvB,kBAAC,EAAD,OAEA,yBAAKkF,MAAO,CAACrC,OAAO,OACtB,6BACI,kBAACsE,EAAA,EAAD,CAAQzF,SAAS,QAAQwD,MAAO,CAACoC,OAAO,EAAEC,IAAI,SAC9C,kBAACH,EAAA,EAAD,KACE,yBAAKtG,UAAU,mDAAmDoE,MAAO,CAACnF,MAAM,SAC9E,kBAAC4B,EAAA,EAAD,CAAYC,KAAK,QAAQK,MAAM,UAAUgE,aAAW,QAClD,kBAAC,IAAD,OAEF,kBAACoB,EAAA,EAAD,KACE,uEC3BMG,QACW,cAA7BC,OAAOC,SAASC,UAEe,UAA7BF,OAAOC,SAASC,UAEhBF,OAAOC,SAASC,SAASC,MACvB,2D,MCXNC,IAASC,OACP,kBAAC,IAAMC,WAAP,KACE,kBAAC,EAAD,OAEFlD,SAASC,eAAe,SDwHpB,kBAAmBkD,WACrBA,UAAUC,cAAcC,MACrBC,MAAK,SAAAC,GACJA,EAAaC,gBAEdC,OAAM,SAAAC,GACLC,QAAQD,MAAMA,EAAME,c","file":"static/js/main.e014f70d.chunk.js","sourcesContent":["import React from 'react';\r\n\r\nimport { makeStyles } from '@material-ui/core/styles';\r\nimport IconButton from '@material-ui/core/IconButton';\r\nimport AddIcon from '@material-ui/icons/Add';\r\n\r\nimport FilledInput from '@material-ui/core/FilledInput';\r\nimport InputLabel from '@material-ui/core/InputLabel';\r\nimport InputAdornment from '@material-ui/core/InputAdornment';\r\nimport FormControl from '@material-ui/core/FormControl';\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n    noteinput:{marginLeft:'7px',width:'96%',marginTop:'7px',\r\n        backgroundColor:'white',borderRadius:3\r\n    }\r\n  }));\r\n\r\nexport default function Modalchild({addnote}){\r\n    const classes = useStyles();\r\n      const [values, setValues] = React.useState({\r\n        note: '',\r\n      });\r\n      const handleChange = (prop) => (event) => {\r\n        setValues({ ...values, [prop]: event.target.value });\r\n      };\r\n    return(\r\n    <>\r\n        <FormControl variant=\"filled\" className={classes.noteinput}>\r\n            <InputLabel htmlFor=\"note\">Add Notes Name</InputLabel>\r\n            <FilledInput\r\n                id=\"note\"\r\n                type='text'\r\n                value={values.note}\r\n                onChange={handleChange('note')}\r\n                endAdornment={\r\n                <InputAdornment position=\"end\">\r\n                    <IconButton\r\n                    edge=\"end\"\r\n                    onClick={()=>{addnote(values.note)}}\r\n                    >\r\n                        <AddIcon/>\r\n                    </IconButton>\r\n                </InputAdornment>\r\n                }\r\n            />\r\n        </FormControl>\r\n    </>\r\n    )\r\n}","import React,{useState} from 'react';\r\nimport { makeStyles } from '@material-ui/core/styles';\r\nimport Paper from '@material-ui/core/Paper';\r\nimport InputBase from '@material-ui/core/InputBase';\r\nimport Divider from '@material-ui/core/Divider';\r\nimport Modal from '@material-ui/core/Modal';\r\nimport IconButton from '@material-ui/core/IconButton';\r\nimport SearchIcon from '@material-ui/icons/Search';\r\nimport EditIcon from '@material-ui/icons/Edit';\r\nimport AddIcon from '@material-ui/icons/Add';\r\nimport List from '@material-ui/core/List';\r\nimport ListItem from '@material-ui/core/ListItem';\r\nimport ListItemText from '@material-ui/core/ListItemText';\r\nimport ListItemAvatar from '@material-ui/core/ListItemAvatar';\r\nimport Avatar from '@material-ui/core/Avatar';\r\nimport NotesIcon from '@material-ui/icons/Notes';\r\nimport TextField from '@material-ui/core/TextField';\r\nimport Fab from '@material-ui/core/Fab';\r\nimport Modalchild from './modalchildComponent';\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n    listroot: {marginTop:10,width:'100%',maxWidth: 400,\r\n    boxShadow:'0px 3px 3px -2px rgba(0, 0, 0, 0.2),0px 3px 4px 0px rgba(0, 0, 0, 0.14), 0px 1px 8px 0px rgba(0, 0, 0, 0.12)',\r\n    backgroundColor:'blue',color:'white',borderRadius:5,maxHeight:'700px',overflow:'auto'\r\n      },\r\n    root: {padding: '2px 4px',display: 'flex',alignItems: 'center',maxWidth: 400,\r\n    },\r\n    input: {marginLeft: theme.spacing(1),flex: 1,\r\n    },\r\n    iconButton: {padding: 10,\r\n    },\r\n    divider: {height: 28,margin: 4,\r\n    },\r\n    dividerlist: {height: 1,margin: 4,\r\n    },\r\n    paper: {position: 'absolute',maxWidth: 400,height:75,background: 'linear-gradient(to right, rgb(142, 45, 226), rgb(74, 0, 224))',borderRadius:5,\r\n        border: '2px solid #000',margin:'auto'\r\n      },\r\n    noteinput:{marginLeft:'15%',width:'70%',marginTop:'70px',\r\n        backgroundColor:'white',borderRadius:3\r\n    }\r\n  }));\r\n\r\nfunction Main() {\r\n    const classes = useStyles();\r\n    const handleClose=()=>{setopen(false);}\r\n    const handleClose1=()=>{setopen1(false);}\r\n    const addnote=(val)=>{\r\n        if(val!=''){\r\n            setnotesarr(notesarr.concat(','+val));\r\n            localStorage.setItem('notesarr',notesarr.concat(','+val));\r\n        }\r\n        handleClose()\r\n        handleClose1()\r\n    }\r\n    const addfirstnote=(val)=>{\r\n        setnotesarr(val);\r\n        localStorage.setItem('notesarr',val);\r\n    }\r\n    const datachangeHandler=(val)=>{\r\n        settextareadata(val);\r\n        localStorage.setItem(current,val)\r\n    }\r\n    const [notesarr,setnotesarr]=useState(localStorage.getItem('notesarr'));\r\n    const [open,setopen]=useState(false);\r\n    const [open1,setopen1]=useState(false);\r\n    const [textareadata,settextareadata]=useState('');\r\n    const [search,setsearch]=useState(' ');\r\n    const [current,setcurrent]=useState('');\r\n    if(localStorage.getItem('notesarr') && search!=' ' ){\r\n        var notesdata=notesarr.split(',').filter((data)=>new RegExp(search).test(data)).map((data)=>{\r\n            return(\r\n                <>\r\n                <ListItem key={data}\r\n                    onClick={()=>{\r\n                    document.getElementById('multiline').value=localStorage.getItem(data);\r\n                    setTimeout(()=>{\r\n                        settextareadata(localStorage.getItem(data)||'');\r\n                    },100)\r\n                    setcurrent(data);\r\n                }}>\r\n                    <ListItemAvatar>\r\n                    <Avatar style={{color:'black',backgroundColor:'white'}}>\r\n                        <NotesIcon/>\r\n                    </Avatar>\r\n                    </ListItemAvatar>\r\n                    <ListItemText primary={data} />\r\n                </ListItem>\r\n                <Divider className={classes.dividerlist} orientation=\"horizontal\" />\r\n                </>\r\n            );\r\n        })\r\n    }\r\n    else if(localStorage.getItem('notesarr') && search==' ' ){\r\n        var notesdata=notesarr.split(',').map((data)=>{\r\n            return(\r\n                <>\r\n                <ListItem key={data} onClick={()=>{\r\n                    document.getElementById('multiline').value=localStorage.getItem(data);\r\n                    setTimeout(()=>{\r\n                        settextareadata(localStorage.getItem(data)||'');\r\n                    },100)\r\n                    setcurrent(data);\r\n                }}>\r\n                    <ListItemAvatar>\r\n                    <Avatar style={{color:'black',backgroundColor:'white'}}>\r\n                        <NotesIcon/>\r\n                    </Avatar>\r\n                    </ListItemAvatar>\r\n                    <ListItemText primary={data}/>\r\n                </ListItem>\r\n                <Divider className={classes.dividerlist} orientation=\"horizontal\" />\r\n                </>\r\n            );\r\n        })\r\n    }\r\n    if(notesarr){\r\n        return (\r\n            <>\r\n            <div className=\"d-flex justify-content-center\" style={{marginTop:20}}>\r\n            <Fab color=\"primary\" variant=\"extended\">\r\n                <b>\r\n                Make Your Notes here!!\r\n                </b>\r\n            <EditIcon style={{marginLeft:8}}/>\r\n            </Fab>\r\n            </div>\r\n            <div className=\"container\" style={{marginTop:50,marginBottom:50}}>\r\n            <Paper elevation={3} style={{padding:10,paddingTop:0,background:'linear-gradient(to right, rgb(142, 45, 226), rgb(74, 0, 224))'}}>\r\n                <div className=\"row\">\r\n                    <div className=\"col-lg-5 col-md-12 col-sm-12 mt-2\">\r\n                        <Paper component=\"form\" elevation={3} className={classes.root}>\r\n                            <InputBase\r\n                                className={classes.input}\r\n                                placeholder=\"Search\"\r\n                                onChange={(val)=>{\r\n                                    setsearch(val.target.value)\r\n                                }}\r\n                                inputProps={{ 'aria-label': 'search' }}\r\n                            />\r\n                            <IconButton type=\"submit\" className={classes.iconButton} aria-label=\"search\">\r\n                                <SearchIcon />\r\n                            </IconButton>\r\n                            <Divider className={classes.divider} orientation=\"vertical\" />\r\n                            <IconButton color=\"primary\" onClick={()=>{setopen(true)}} className={classes.iconButton} aria-label=\"directions\">\r\n                            <AddIcon/>\r\n                            </IconButton>\r\n                            <Modal\r\n                                className={classes.paper}\r\n                                open={open}\r\n                                onClose={handleClose}\r\n                                aria-labelledby=\"simple-modal-title\"\r\n                                aria-describedby=\"simple-modal-description\"\r\n                            >\r\n                            <Modalchild addnote={addnote}/>\r\n                            </Modal>\r\n                        </Paper>\r\n                        <List className={classes.listroot}>\r\n                            {notesdata}\r\n                        </List>\r\n                    </div>\r\n                    <div className=\"col mt-2\">\r\n                        <TextField\r\n                        style={{minHeight:500,width:'100%'}}\r\n                        id=\"multiline\"\r\n                        onChange={(val)=>{\r\n                            datachangeHandler(val.target.value)\r\n                        }}\r\n                        multiline\r\n                        rows={30}\r\n                        defaultValue={textareadata}\r\n                        variant=\"outlined\"\r\n                        />\r\n                    </div>\r\n                </div>\r\n            </Paper>\r\n            </div>\r\n            </>\r\n          );\r\n    }else{\r\n        return(\r\n        <div>\r\n            <div className=\"d-flex justify-content-center\" style={{marginTop:20}}>\r\n            <Fab color=\"primary\" variant=\"extended\">\r\n                <b>\r\n                Make Your Notes here!!\r\n                </b>\r\n            <EditIcon style={{marginLeft:8}}/>\r\n            </Fab>\r\n            </div>\r\n            <div style={{marginTop:40}} className=\"container\">\r\n                <Paper elevation={3} style={{marginLeft:10,marginRight:10,padding:30,borderRadius:8,background:'linear-gradient(to right, rgb(142, 45, 226), rgb(74, 0, 224))'}}>\r\n                <h4 style={{textAlign:'center',marginTop:10,color:'white'}}>\r\n                    <b>\r\n                    YOU HAVE NOT YET ADDED AN NOTES !\r\n                    </b>\r\n                    </h4>\r\n                <div className=\"d-flex justify-content-center\" style={{marginTop:100}}>\r\n                    <Paper elevation={3} component=\"form\" className={classes.root}>\r\n                        <InputBase\r\n                            className={classes.input}\r\n                            placeholder=\"Search\"\r\n                            inputProps={{ 'aria-label': 'search' }}\r\n                        />\r\n                        <IconButton type=\"submit\" className={classes.iconButton} aria-label=\"search\">\r\n                            <SearchIcon />\r\n                        </IconButton>\r\n                        <Divider className={classes.divider} orientation=\"vertical\" />\r\n                        <IconButton color=\"primary\" onClick={()=>{setopen1(true)}} className={classes.iconButton} aria-label=\"directions\">\r\n                            <AddIcon/>\r\n                        </IconButton>\r\n                        <Modal\r\n                            className={classes.paper}\r\n                            open={open1}\r\n                            onClose={handleClose1}\r\n                            aria-labelledby=\"simple-modal-title\"\r\n                            aria-describedby=\"simple-modal-description\"\r\n                        >\r\n                            <Modalchild addnote={addfirstnote}/>\r\n                        </Modal>\r\n                    </Paper>\r\n                </div>\r\n                </Paper>\r\n            </div>\r\n        </div>);\r\n    }\r\n}\r\n\r\nexport default Main;\r\n","import React from 'react';\nimport './App.css';\nimport Main from './Components/mainComponent';\n\nimport AppBar from '@material-ui/core/AppBar';\nimport Toolbar from '@material-ui/core/Toolbar';\nimport Typography from '@material-ui/core/Typography';\nimport IconButton from '@material-ui/core/IconButton';\nimport NoteAddOutlined from '@material-ui/icons/NoteAddOutlined';\nimport ContactMail from '@material-ui/icons/ContactMail';\nfunction App() {\n  return (\n    <div>\n      <div style={{display:'flex',justifyContent:'center'}}>\n            <AppBar position=\"fixed\">\n            <Toolbar>\n              <IconButton edge=\"start\" color=\"inherit\" aria-label=\"menu\">\n                <NoteAddOutlined />\n              </IconButton>\n              <Typography variant=\"h6\">\n                <b>\n                NOTE MAKER\n                </b>\n              </Typography>\n            </Toolbar>\n          </AppBar>\n      </div>\n      <div style={{marginTop:90}}>\n      <Main/>\n      </div>\n      <div style={{height:100}}></div>\n    <div>\n        <AppBar position=\"fixed\" style={{bottom:0,top:'auto'}}>\n        <Toolbar>\n          <div className=\"d-flex justify-content-center align-items-center\" style={{width:'100%'}}>\n            <IconButton edge=\"start\" color=\"inherit\" aria-label=\"menu\">\n              <ContactMail />\n            </IconButton>\n            <Typography>\n              <b>\n              CONTACT US : dhanuram99@gmail.com\n              </b>\n            </Typography>\n          </div>\n        </Toolbar>\n      </AppBar>\n    </div>\n    </div>\n  );\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\nimport 'bootstrap/dist/css/bootstrap.min.css'\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}