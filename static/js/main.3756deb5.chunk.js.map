{"version":3,"sources":["Components/modalchildComponent.js","Components/mainComponent.js","App.js","serviceWorker.js","index.js"],"names":["useStyles","makeStyles","theme","noteinput","width","backgroundColor","borderRadius","Modalchild","prop","addnote","classes","React","useState","note","values","setValues","FormControl","variant","className","InputLabel","htmlFor","FilledInput","id","type","value","onChange","event","target","endAdornment","InputAdornment","position","IconButton","edge","onClick","listroot","marginTop","maxWidth","boxShadow","background","color","maxHeight","overflow","root","padding","display","alignItems","input","marginLeft","spacing","flex","iconButton","divider","height","margin","dividerlist","paper","Main","notesdata","handleClose","setopen","handleClose1","setopen1","localStorage","getItem","notesarr","setnotesarr","open","open1","textareadata","settextareadata","search","setsearch","current","setcurrent","split","filter","data","RegExp","test","map","i","key","ListItem","document","getElementById","setTimeout","ListItemAvatar","Avatar","style","ListItemText","primary","Divider","orientation","j","marginBottom","Paper","elevation","paddingTop","component","InputBase","placeholder","val","inputProps","aria-label","Modal","onClose","aria-labelledby","aria-describedby","concat","setItem","List","TextField","minHeight","datachangeHandler","multiline","rows","defaultValue","marginRight","textAlign","Button","size","App","flexDirection","AppBar","Toolbar","Typography","bottom","top","Boolean","window","location","hostname","match","ReactDOM","render","StrictMode","navigator","serviceWorker","ready","then","registration","unregister","catch","error","console","message"],"mappings":"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","file":"static/js/main.3756deb5.chunk.js","sourcesContent":["import React from 'react';\r\n\r\nimport { makeStyles } from '@material-ui/core/styles';\r\nimport IconButton from '@material-ui/core/IconButton';\r\nimport AddIcon from '@material-ui/icons/Add';\r\n\r\nimport FilledInput from '@material-ui/core/FilledInput';\r\nimport InputLabel from '@material-ui/core/InputLabel';\r\nimport InputAdornment from '@material-ui/core/InputAdornment';\r\nimport FormControl from '@material-ui/core/FormControl';\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n    noteinput:{\r\n      width:'100%',\r\n      backgroundColor:'white',borderRadius:3\r\n    }\r\n  }));\r\n\r\nexport default function Modalchild({addnote}){\r\n    const classes = useStyles();\r\n      const [values, setValues] = React.useState({\r\n        note: '',\r\n      });\r\n      const handleChange = (prop) => (event) => {\r\n        setValues({ ...values, [prop]: event.target.value });\r\n      };\r\n    return(\r\n    <>\r\n        <FormControl variant=\"filled\" className={classes.noteinput}>\r\n            <InputLabel htmlFor=\"note\">Add Notes Name</InputLabel>\r\n            <FilledInput\r\n                id=\"note\"\r\n                type='text'\r\n                value={values.note}\r\n                onChange={handleChange('note')}\r\n                endAdornment={\r\n                <InputAdornment position=\"end\">\r\n                    <IconButton\r\n                    edge=\"end\"\r\n                    onClick={()=>{addnote(values.note)}}\r\n                    >\r\n                        <AddIcon/>\r\n                    </IconButton>\r\n                </InputAdornment>\r\n                }\r\n            />\r\n        </FormControl>\r\n    </>\r\n    )\r\n}","import React,{useState} from 'react';\r\nimport { makeStyles } from '@material-ui/core/styles';\r\nimport Paper from '@material-ui/core/Paper';\r\nimport InputBase from '@material-ui/core/InputBase';\r\nimport Divider from '@material-ui/core/Divider';\r\nimport Modal from '@material-ui/core/Modal';\r\nimport IconButton from '@material-ui/core/IconButton';\r\nimport SearchIcon from '@material-ui/icons/Search';\r\nimport AddIcon from '@material-ui/icons/Add';\r\nimport List from '@material-ui/core/List';\r\nimport ListItem from '@material-ui/core/ListItem';\r\nimport ListItemText from '@material-ui/core/ListItemText';\r\nimport ListItemAvatar from '@material-ui/core/ListItemAvatar';\r\nimport Avatar from '@material-ui/core/Avatar';\r\nimport NotesIcon from '@material-ui/icons/Notes';\r\nimport TextField from '@material-ui/core/TextField';\r\nimport Modalchild from './modalchildComponent';\r\nimport { Button } from '@material-ui/core';\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n    listroot: {\r\n        marginTop:10,width:'100%',maxWidth: 400,\r\n        boxShadow:'0px 3px 3px -2px rgba(0, 0, 0, 0.2),0px 3px 4px 0px rgba(0, 0, 0, 0.14), 0px 1px 8px 0px rgba(0, 0, 0, 0.12)',\r\n        background:'linear-gradient(to right,rgb(15, 12, 41),rgb(48, 43, 99),rgb(36, 36, 62))',color:'white',borderRadius:5,maxHeight:'700px',overflow:'auto'\r\n    },\r\n    root: {padding: '2px 4px',display: 'flex',alignItems: 'center',maxWidth: 400,\r\n    },\r\n    input: {marginLeft: theme.spacing(1),flex: 1,\r\n    },\r\n    iconButton: {padding: 10,\r\n    },\r\n    divider: {height: 28,margin: 4,\r\n    },\r\n    dividerlist: {height: 1,margin: 4,\r\n    },\r\n    paper: {\r\n        position: 'absolute',maxWidth: 400,\r\n        height:60,\r\n        // background: 'linear-gradient(to right, rgb(142, 45, 226), rgb(74, 0, 224))',\r\n        borderRadius:5,margin:'auto',\r\n    },\r\n    noteinput:{\r\n        marginLeft:'15%',width:'70%',marginTop:'70px',\r\n        backgroundColor:'white',borderRadius:3\r\n    }\r\n  }));\r\n\r\nfunction Main() {\r\n    const classes = useStyles();\r\n    const handleClose=()=>{setopen(false);}\r\n    const handleClose1=()=>{setopen1(false);}\r\n    const addnote=(val)=>{\r\n        if(val!==''){\r\n            setnotesarr(notesarr.concat(','+val));\r\n            localStorage.setItem('notesarr',notesarr.concat(','+val));\r\n        }\r\n        handleClose()\r\n        handleClose1()\r\n    }\r\n    const addfirstnote=(val)=>{\r\n        setnotesarr(val);\r\n        localStorage.setItem('notesarr',val);\r\n    }\r\n    const datachangeHandler=(val)=>{\r\n        settextareadata(val);\r\n        localStorage.setItem(current,val)\r\n    }\r\n    const [notesarr,setnotesarr]=useState(localStorage.getItem('notesarr'));\r\n    const [open,setopen]=useState(false);\r\n    const [open1,setopen1]=useState(false);\r\n    const [textareadata,settextareadata]=useState('');\r\n    const [search,setsearch]=useState(' ');\r\n    const [current,setcurrent]=useState('');\r\n    var notesdata;\r\n    if(localStorage.getItem('notesarr') && search!==' ' ){\r\n        notesdata=notesarr.split(',').filter((data)=>new RegExp(search).test(data)).map((data,i)=>{\r\n            return(\r\n                <div key={i}>\r\n                    <ListItem\r\n                        onClick={()=>{\r\n                        document.getElementById('multiline').value=localStorage.getItem(data);\r\n                        setTimeout(()=>{\r\n                            settextareadata(localStorage.getItem(data)||'');\r\n                        },100)\r\n                        setcurrent(data);\r\n                    }}>\r\n                        <ListItemAvatar>\r\n                        <Avatar style={{color:'black',backgroundColor:'white'}}>\r\n                            <NotesIcon/>\r\n                        </Avatar>\r\n                        </ListItemAvatar>\r\n                        <ListItemText primary={data} />\r\n                    </ListItem>\r\n                    <Divider className={classes.dividerlist} orientation=\"horizontal\" />\r\n                </div>\r\n            );\r\n        })\r\n    }\r\n    else if(localStorage.getItem('notesarr') && search===' ' ){\r\n        notesdata=notesarr.split(',').map((data,j)=>{\r\n            return(\r\n                <div key={j}>\r\n                    <ListItem key={data} onClick={()=>{\r\n                        document.getElementById('multiline').value=localStorage.getItem(data);\r\n                        setTimeout(()=>{\r\n                            settextareadata(localStorage.getItem(data)||'');\r\n                        },100)\r\n                        setcurrent(data);\r\n                    }}>\r\n                        <ListItemAvatar>\r\n                        <Avatar style={{color:'black',backgroundColor:'white'}}>\r\n                            <NotesIcon/>\r\n                        </Avatar>\r\n                        </ListItemAvatar>\r\n                        <ListItemText primary={data}/>\r\n                    </ListItem>\r\n                    <Divider className={classes.dividerlist} orientation=\"horizontal\" />\r\n                </div>\r\n            );\r\n        })\r\n    }\r\n    if(notesarr){\r\n        return (\r\n            <>\r\n            <div className=\"d-flex justify-content-center\" style={{marginTop:20}}>\r\n            </div>\r\n            <div className=\"container\" style={{marginTop:20,marginBottom:20}}>\r\n            <Paper elevation={3} style={{\r\n                padding:10,paddingTop:0,\r\n                // background:'linear-gradient(to right, rgb(142, 45, 226), rgb(74, 0, 224))'\r\n            }}>\r\n                <div className=\"row\">\r\n                    <div className=\"col-lg-5 col-md-12 col-sm-12 mt-2\">\r\n                        <Paper component=\"form\" elevation={3} className={classes.root}>\r\n                            <InputBase\r\n                                className={classes.input}\r\n                                placeholder=\"Search\"\r\n                                onChange={(val)=>{\r\n                                    setsearch(val.target.value)\r\n                                }}\r\n                                inputProps={{ 'aria-label': 'search' }}\r\n                            />\r\n                            <IconButton type=\"submit\" className={classes.iconButton} aria-label=\"search\">\r\n                                <SearchIcon />\r\n                            </IconButton>\r\n                            <Divider className={classes.divider} orientation=\"vertical\" />\r\n                            <IconButton color=\"primary\" onClick={()=>{setopen(true)}} className={classes.iconButton} aria-label=\"directions\">\r\n                            <AddIcon/>\r\n                            </IconButton>\r\n                            <Modal\r\n                                className={classes.paper}\r\n                                open={open}\r\n                                onClose={handleClose}\r\n                                aria-labelledby=\"simple-modal-title\"\r\n                                aria-describedby=\"simple-modal-description\"\r\n                            >\r\n                            <Modalchild addnote={addnote}/>\r\n                            </Modal>\r\n                        </Paper>\r\n                        <List className={classes.listroot}>\r\n                            {notesdata}\r\n                        </List>\r\n                    </div>\r\n                    <div className=\"col mt-2\">\r\n                        <TextField\r\n                        style={{minHeight:500,width:'100%'}}\r\n                        id=\"multiline\"\r\n                        onChange={(val)=>{\r\n                            datachangeHandler(val.target.value)\r\n                        }}\r\n                        multiline\r\n                        rows={30}\r\n                        defaultValue={textareadata}\r\n                        variant=\"outlined\"\r\n                        />\r\n                    </div>\r\n                </div>\r\n            </Paper>\r\n            </div>\r\n            </>\r\n          );\r\n    }else{\r\n        return(\r\n        <div>\r\n            <div className=\"d-flex justify-content-center\" style={{marginTop:20}}>\r\n            </div>\r\n            <div style={{marginTop:20}} className=\"container\">\r\n                <Paper elevation={3} style={{\r\n                    marginLeft:10,marginRight:10,padding:30,borderRadius:8,\r\n                    // background:'linear-gradient(to right, rgb(142, 45, 226), rgb(74, 0, 224))'\r\n                }}>\r\n                <h4 style={{textAlign:'center',marginTop:10,color:'black'}}>\r\n                    <b>\r\n                    YOU HAVE NOT YET ADDED AN NOTES !\r\n                    </b>\r\n                </h4>\r\n                <div className=\"d-flex justify-content-center\" style={{marginTop:50}}>\r\n                    <Button variant=\"contained\" size=\"medium\" onClick={()=>{setopen1(true)}} color=\"primary\">\r\n                        Add\r\n                        <AddIcon/>\r\n                    </Button>\r\n                    <Modal\r\n                        className={classes.paper}\r\n                        open={open1}\r\n                        onClose={handleClose1}\r\n                        aria-labelledby=\"simple-modal-title\"\r\n                        aria-describedby=\"simple-modal-description\"\r\n                    >\r\n                        <Modalchild addnote={addfirstnote}/>\r\n                    </Modal>\r\n                </div>\r\n                </Paper>\r\n            </div>\r\n        </div>);\r\n    }\r\n}\r\n\r\nexport default Main;\r\n","import React from 'react';\nimport './App.css';\nimport Main from './Components/mainComponent';\n\nimport AppBar from '@material-ui/core/AppBar';\nimport Toolbar from '@material-ui/core/Toolbar';\nimport Typography from '@material-ui/core/Typography';\nimport IconButton from '@material-ui/core/IconButton';\nimport NoteAddOutlined from '@material-ui/icons/NoteAddOutlined';\nimport ContactMail from '@material-ui/icons/ContactMail';\nfunction App() {\n  return (\n    <div style={{display:'flex', flexDirection:'column', height: \"100vh\"}}>\n      <AppBar position=\"fixed\">\n        <Toolbar>\n          <IconButton edge=\"start\" color=\"inherit\" aria-label=\"menu\">\n            <NoteAddOutlined />\n          </IconButton>\n          <Typography variant=\"h6\">\n            <b>\n            NOTE MAKER\n            </b>\n          </Typography>\n        </Toolbar>\n      </AppBar>\n      <div style={{marginTop:85}}>\n        <Main/>\n      </div>\n      <div style={{height:20}}></div>\n      <AppBar style={{bottom:0,top:'auto',position:'static',marginTop:'auto'}}>\n        <Toolbar>\n          <div className=\"d-flex justify-content-center align-items-center\" style={{width:'100%'}}>\n            <IconButton edge=\"start\" color=\"inherit\" aria-label=\"menu\">\n              <ContactMail />\n            </IconButton>\n            <Typography>\n              <b>\n              CONTACT US : dhanuram99@gmail.com\n              </b>\n            </Typography>\n          </div>\n        </Toolbar>\n      </AppBar>\n    </div>\n  );\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\nimport 'bootstrap/dist/css/bootstrap.min.css'\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}